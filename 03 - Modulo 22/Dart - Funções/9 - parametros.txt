Introdução aos parâmetros:
  Conceito: Parâmetros são variáveis passadas para dentro de uma função, permitindo que ela opere sobre diferentes valores.
  Uso: Utilizados para tornar funções mais flexíveis e reutilizáveis, permitindo que a mesma função seja usada com diferentes dados.
  Analogia: Podemos fazer uma analogia aos ingredientes em uma receita, na qual podem produzir diferentes resultados dependendo dos ingredientes usados.

* Parâmetros dinâmicos:
  Conceito: Parâmetros que podem receber valores de diferentes tipos.
  Uso: Utilizados quando a função precisa lidar com diferentes tipos de dados.
  Exemplo:
    1 - Função com parâmetro dinâmico:
      dynamic juntar(dynamic a, dynamic b) => return a.toString() + b.toString();

* Parâmetros opcionais:
  Conceito: Parâmetros que não precisam ser passados quando a função é chamada (tem um valor padrão).
  Uso: Utilizados para tornar a chamada da função mais flexível, permitindo omitir certos argumentos.
  Exemplo:
    1 - Função com parâmetros opcionais:
      void imprimirData(int dia, [int mes = 1, int ano = 1970]) => print("Data: $dia/$mes/$ano");

* Parâmetros posicionais:
  Conceito: Parâmetros que são passados para a função na ordem em que são definidos.
  Ou seja: A posição do valor passado na chamada da função corresponde à posição do parâmetro na definição da função.
  Uso: Utilizados quando a ordem dos argumentos é fixa e importante para a função (útil para poucos parâmetros).
  Símbolo: O símbolo usado para definir os parâmetros posicionais são os corchetes "[]"
  Exemplo:
    1 - Função com parâmetros posicionais:
      void imprimirData(int dia, [int mes = 1, int ano = 1970]) => print("Data: $dia/$mes/$ano");

* Parâmetros Nomeados:
  Conceito: Parâmetros que são passados por nome em vez de posição (tem um valor padrão).
  Uso: Utilizados para aumentar a clareza e legibilidade do código, especialmente quando há muitos parâmetros ou quando alguns podem ser omitidos.
  Símbolo: O símbolo usado para definir os parâmetros nomeados são as chaves "{}"
  Exemplo:
    1 -  Função com parâmetros nomeados:
      void imprimirData(int dia, {int mes = 1, int ano = 1970}) => print("Data: $dia/$mes/$ano");

* Função como Parâmetro:
  Conceito: Uma função pode ser passada como argumento para outra função, permitindo que uma função execute outra função como parte de sua operação.
  Uso: Utilizado para criar funções mais flexíveis e reutilizáveis, permitindo que comportamentos específicos sejam definidos fora da função principal.
  Exemplo:
    1 - Executar uma função várias vezes:
      void execVariasVezes(void Function({String nome}) fn, {required int vezes}) {
        for (int i = 0; i < vezes; i++) {
          fn();
        }
      }
