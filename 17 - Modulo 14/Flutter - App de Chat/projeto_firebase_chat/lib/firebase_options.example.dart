// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
// await Firebase.initializeApp(
//   options: DefaultFirebaseOptions.currentPlatform,
// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'WXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',
    appId: 'X:XXXXXXXXXXXX:web_1:XXXXXXXXXXXXXXXXXXXXXX',
    messagingSenderId: 'XXXXXXXXXXXX',
    projectId: 'XXXXXXXXXXX',
    authDomain: 'XXXXXXXXXXX.firebaseapp.com',
    storageBucket: 'XXXXXXXXXXX.appspot.com',
    measurementId: 'W-XXXXXXXXXX',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',
    appId: 'X:XXXXXXXXXXXX:android:XXXXXXXXXXXXXXXXXXXXXX',
    messagingSenderId: 'XXXXXXXXXXXX',
    projectId: 'XXXXXXXXXXX',
    storageBucket: 'XXXXXXXXXXX.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'IXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',
    appId: 'X:XXXXXXXXXXXX:ios:XXXXXXXXXXXXXXXXXXXXXX',
    messagingSenderId: 'XXXXXXXXXXXX',
    projectId: 'XXXXXXXXXXX',
    storageBucket: 'XXXXXXXXXXX.appspot.com',
    iosBundleId: 'com.example.projeto_firebase_chat',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'IXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',
    appId: 'X:XXXXXXXXXXXX:ios:XXXXXXXXXXXXXXXXXXXXXX',
    messagingSenderId: 'XXXXXXXXXXXX',
    projectId: 'XXXXXXXXXXX',
    storageBucket: 'XXXXXXXXXXX.appspot.com',
    iosBundleId: 'com.example.projeto_firebase_chat',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',
    appId: 'X:XXXXXXXXXXXX:web_2:XXXXXXXXXXXXXXXXXXXXXX',
    messagingSenderId: 'XXXXXXXXXXXX',
    projectId: 'XXXXXXXXXXX',
    authDomain: 'XXXXXXXXXXX.firebaseapp.com',
    storageBucket: 'XXXXXXXXXXX.appspot.com',
    measurementId: 'I-XXXXXXXXXX',
  );
}
