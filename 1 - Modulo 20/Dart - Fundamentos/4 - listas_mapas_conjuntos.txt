Introdução as Listas, Mapas e Conjuntos
  Conceito: Listas, mapas e conjuntos são estruturas de dados que permitem armazenar múltiplos valores em uma única variável.
  Diferença: Listas são coleções ordenadas de objetos, mapas são coleções de pares chave/valor e conjuntos são coleções não ordenadas de objetos.
  Atenção: Listas e mapas são coleções que permitem elementos duplicados, já os conjuntos não permitem elementos duplicados.
  Exemplos:
    1 - Criando uma lista de nomes:
      const List<String> nomes = ['Daniel', 'Mari', 'João', 'Pedro', 'Maria'];
      print("A lista de nomes é: $nomes");
    2 - Criando uma lista de código de telefones:
      const List<String> telefones = ['11', '21', '13', '85', '14'];
      print("A lista de telefones é: $telefones");
    3 - Criando um mapa de nomes e telefones:
      final Map<String, String> agenda = Map.fromIterables(nomes, telefones);
      print("A agenda é: $agenda");
    4 - Acessando elementos de uma lista:
      print("Primeiro elemento da lista: ${nomes.elementAt(0)}");
    5 - Acessando elementos de um mapa:
      print("O telefone do Daniel é: ${agenda['Daniel']}");
    6 - Acessando uma chave em um mapa, caso a chave não exista, será retornado "null":
      print("A agenda contém a chave 'Daniel'? ${agenda.containsKey('Daniel')}");
    7 - Acessando um valor em um mapa, caso o valor não exista, será retornado "false":
      print("A agenda contém o valor '85'? ${agenda.containsValue('85')}");
    8 - Criando um conjunto de notas:
      final Set<double> notas = {9.5, 8.2, 7.0, 10.0, 9.5, 8.2, 7.0, 10.0};
      print("Notas: $notas");
    9 - Acessando o primeiro elemento de um conjunto:
      print("Primeira nota: ${notas.first}");
    10 - Acessando o último elemento de um conjunto:
      print("Última nota: ${notas.last}");
